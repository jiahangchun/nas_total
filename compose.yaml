version: "3.9"
services:
  ## 反向解析服务
  ddns:
    container_name: ddns
    image: jeessy/ddns-go
    ports:
      - 9100:9876
    restart: always
    volumes:
      - $CONFIG/ddns:/root

  # 网关服务
  traefik:
    container_name: traefik
    image: traefik:v3.0.0
    restart: always
    ports:
      - 9001:9001
      - 1314:1314
      - 3307:3307
    labels:
      - "traefik.http.routers.traefik-dashboard.rule=Host(`dashboard.jiahangchun.icu`)"
      - "traefik.http.routers.traefik-dashboard.service=dashboard@internal"
      - "traefik.http.routers.traefik-dashboard-api.rule=Host(`dashboard.jiahangchun.icu`) && PathPrefix(`/api`)"
      - "traefik.http.routers.traefik-dashboard-api.service=api@internal"
      - "traefik.http.middlewares.gzip.compress=true"
      - "traefik.http.routers.traefik-dashboard.middlewares=gzip@docker"
      - "traefik.http.routers.traefik-dashboard-api.middlewares=gzip@docker"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/traefik.yml:ro
      - ./config/traefik/:/etc/traefik/config:ro
    healthcheck:
      test: [ "CMD-SHELL", "wget -q --spider --proxy off localhost:8082/ping || exit 1" ]
      interval: 3s
      retries: 10
    networks:
      - traefik
    depends_on:
      - ddns



  # 测试   服务
  whoami:
    container_name: whoami
    image: containous/whoami
    restart: always
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.jiahangchun.icu`)"
#      - "traefik.http.routers.whoami.tls=true"
#      - "traefik.http.routers.whoami.entrypoints=https"
    networks:
      - traefik
    depends_on:
      - traefik

  # 导航服务
  flare:
    container_name: flare
    image: soulteary/flare
    restart: always
    command: flare
    volumes:
      - $CONFIG/flare:/app
    labels:
      - "traefik.http.routers.flare.rule=Host(`flare.jiahangchun.icu`)"
    networks:
      - traefik
    depends_on:
      traefik:
        condition: service_healthy

  # https://hub.docker.com/_/mysql
  # docker exec -it some-mysql bash
  # docker logs some-mysql
  mysqldb:
    image: mysql:8.0.18
    container_name: mysqldb
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQL_DATABASE
      - TZ=$TZ
    volumes:
      - $DATA/mysql/log:/var/log/mysql # 映射日志目录，宿主机:容器
      - $DATA/mysql/data:/var/lib/mysql # 映射数据目录，宿主机:容器
      - $CONFIG/mysql/conf.d:/etc/mysql/conf.d # 映射配置目录，宿主机:容器
      - /etc/localtime:/etc/localtime:ro # 让容器的时钟与宿主机时钟同步，避免时间的问题，ro是read only的意思，就是只读。
# 禁止外网访问
#    labels:
#      - "traefik.enable=true"
#      - "traefik.tcp.routers.mysql.rule=HostSNI(`*`)"
#      - "traefik.tcp.routers.mysql.entrypoints=mysql"
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    ports:
      - 9107:3306
    networks:
      - traefik

  #docker控制面板
  # 访问 http://portaineree.jiahangchun.icu:9001/ 即可访问，这边端口是 未被映射出来的端口,也就是原始端口
  # 这边还需要手动 指定端口，可能 portainer 暴露了多个端口，导致 traefik listener文件 随机选取了一个
  # 参考 官方文档：https://doc.traefik.io/traefik/providers/docker/
  portainer:
    ports:
      - 9108:8000 # 官方文档上的地址是这个
      - 9109:9443
      - 9110:9000 #这个才是webUI的端口
    container_name: portainer
    restart: always
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $DATA/portainerce:/data
    image: portainer/portainer-ce:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portaineree.rule=Host(`portaineree.jiahangchun.icu`)"
      - "traefik.http.services.portaineree.loadbalancer.server.port=9000"
    networks:
      - traefik
    depends_on:
      - traefik

  # 新增自定義服務
  weixin_service:
    image: ghcr.io/jiahangchun/weixin:main
    container_name: weixin_service
    ports:
      - 9113:8080
    volumes:
      - $DATA/weixin_service:/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.weixin.rule=Host(`weixin.jiahangchun.icu`)"
      - "traefik.http.services.weixin.loadbalancer.server.port=8080"
    networks:
      - traefik
    depends_on:
      - traefik
      - nacos
      - mysqldb


  #  http://127.0.0.1:9114/nacos
  nacos:
    image: nacos/nacos-server
    container_name: nacos
    volumes:
      - $DATA/nacos/standalone-logs/:/home/nacos/logs
    environment:
      - PREFER_HOST_MODE=hostname
      - MODE=standalone
      - SPRING_DATASOURCE_PLATFORM=mysql
      - MYSQL_SERVICE_HOST=mysqldb
      - MYSQL_SERVICE_PORT=3306
      - MYSQL_SERVICE_DB_NAME=nacos_config
      - MYSQL_SERVICE_USER=root
      - MYSQL_SERVICE_PASSWORD=76jUi@670k
      - MYSQL_SERVICE_DB_PARAM=allowPublicKeyRetrieval=true
    labels:
      - "traefik.enable=true"
    ports:
      - "9114:8848"
      - "10114:9848"
      - "10115:9849"
      - "8115:7848"
    networks:
      - traefik
#
#  # 待验证
#  ##########################################监控##############################################
  node-exporter:
    image: quay.io/prometheus/node-exporter
    container_name: node-exporter
    hostname: node-exporter
    restart: always
    labels:
      - "traefik.http.routers.exporter.rule=Host(`exporter.jiahangchun.icu`)"
    ports:
      - "9101:9100"
    networks:
      - traefik

  # 需要先安装 cadvisor
#  prometheus:
#    image: prom/prometheus
#    container_name: prometheus
#    hostname: prometheus
#    restart: always
#    volumes:
#      - $CONFIG/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#      - $CONFIG/prometheus/node_down.yml:/etc/prometheus/node_down.yml
#    ports:
#      - "9103:9090"
#    labels:
#      - "traefik.http.routers.prometheus.rule=Host(`prometheus.jiahangchun.icu`)"
#    networks:
#      - traefik



#  grafana:
#    image: grafana/grafana
#    container_name: grafana
#    hostname: grafana
#    environment:
#      - GF_SECURITY_ADMIN_PASSWORD=jiahangchun
#    volumes:
#      - $DATA/grafana/:/var/lib/grafana
#    restart: always
#    labels:
#      - "traefik.http.routers.grafana.rule=Host(`grafana.jiahangchun.icu`)"
#    ports:
#      - "9104:3000"
#    depends_on:
#      - prometheus
#    networks:
#      - traefik

  dsm:
    container_name: dsm
    image: vdsm/virtual-dsm
    environment:
      DISK_SIZE: "500G"
    devices: #kvm是一个内核模块，提供虚拟化能力，对外模拟系统
      - /dev/kvm
    cap_add: #增加网络访问特权
      - NET_ADMIN
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dsm.rule=Host(`dsm.jiahangchun.icu`)"
      - "traefik.http.services.nexus.loadbalancer.server.port=5000"
    ports:
      - 9115:5000
    volumes:
      - /storefile/data/dsm/:/storage
    # 指定在发送SIGKILL之前，如果容器无法处理SIGTERM或使用stop_signal指定的任何停止信号时，试图停止该容器所需要的等待时间
    stop_grace_period: 2m
    networks:
      - traefik

  # 存储中间设备
  nexus:
    image: sonatype/nexus3
    container_name: nexus
    ports:
      - '9116:8081'
    restart: always
    volumes:
      - '/etc/localtime:/etc/localtime'
      - '$DATA/nexus/data:/nexus-data'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nexus.rule=Host(`nexus.jiahangchun.icu`)"
      - "traefik.http.services.nexus.loadbalancer.server.port=8081"
    networks:
      - traefik

  gitlab:
    image: gitlab/gitlab-ce:latest
    container_name: gitlab
    restart: always
    hostname: 'gitlab.jiahangchun.icu'
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab.example.com:8929'
        gitlab_rails['gitlab_shell_ssh_port'] = 2424
    ports:
      - '8929:80'
      - '443:443'
      - '2424:22'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gitlab.rule=Host(`gitlab.jiahangchun.icu`)"
      - "traefik.http.services.gitlab.loadbalancer.server.port=80"
    volumes:
      - '$DATA/gitlab/config:/etc/gitlab'
      - '$DATA/gitlab/logs:/var/log/gitlab'
      - '$DATA/gitlab/data:/var/opt/gitlab'
    shm_size: '256m'
    networks:
      - traefik

  #CIDI 脚本
  gitlab-runner:
    image: gitlab/gitlab-runner:latest
    container_name: gitlab-runner
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gitlabrunner.rule=Host(`gitlabrunner.jiahangchun.icu`)"
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - '$DATA/gitlab/gitlab-runner-config:/etc/gitlab-runner'
    networks:
      - traefik


  #小雅
  xiaoya:
    build: # 构建自定义镜像
      context: ./coding                 # 指定Dockerfile文件所在路径
      dockerfile: Dockerfile_xiaoya         # 指定Dockerfile文件名称
    container_name: xiaoya
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.xiaoya.rule=Host(`xiaoya.jiahangchun.icu`)"
    ports:
      - 11111:8080
    environment:
      TZ: Asia/Shanghai
    networks:
      - traefik



networks:
  traefik:
    external: true
